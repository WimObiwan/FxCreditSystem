// <auto-generated />
using System;
using FxCreditSystem.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FxCreditSystem.Repository.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("FxCreditSystem.Repository.Entities.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Credits")
                        .HasColumnType("REAL");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastChangeUtc")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MinimumCredits")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExternalId")
                        .IsUnique();

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("FxCreditSystem.Repository.Entities.AccountUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("UserId");

                    b.ToTable("AccountUsers");
                });

            modelBuilder.Entity("FxCreditSystem.Repository.Entities.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("CreditsChange")
                        .HasColumnType("REAL");

                    b.Property<double>("CreditsNew")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("DateTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("TEXT");

                    b.Property<long?>("PrimaryTransactionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PrimaryTransactionId");

                    b.HasIndex("AccountId", "ExternalId")
                        .IsUnique();

                    b.HasIndex("AccountId", "Id")
                        .IsUnique();

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("FxCreditSystem.Repository.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthUserId")
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuthUserId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FxCreditSystem.Repository.Entities.AccountUser", b =>
                {
                    b.HasOne("FxCreditSystem.Repository.Entities.Account", "Account")
                        .WithMany("AccountUsers")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FxCreditSystem.Repository.Entities.User", "User")
                        .WithMany("AccountUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FxCreditSystem.Repository.Entities.Transaction", b =>
                {
                    b.HasOne("FxCreditSystem.Repository.Entities.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FxCreditSystem.Repository.Entities.Transaction", "PrimaryTransaction")
                        .WithMany()
                        .HasForeignKey("PrimaryTransactionId");

                    b.Navigation("Account");

                    b.Navigation("PrimaryTransaction");
                });

            modelBuilder.Entity("FxCreditSystem.Repository.Entities.Account", b =>
                {
                    b.Navigation("AccountUsers");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("FxCreditSystem.Repository.Entities.User", b =>
                {
                    b.Navigation("AccountUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
